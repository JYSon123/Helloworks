<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.!! 팀원님들 각자 하나씩 만드셔요) ==== -->
<mapper namespace="yoosj">
	
	
	<!-- tbl_board테이블에서 groupno 컬럼의 최대값 알아오기 -->
	<select id="getGroupnoMax" resultType="int">
		select nvl(max(groupno), 0)
		from tbl_board
	</select>
	
	
	<!-- 파일첨부가 없는 글쓰기  -->
	<!-- 원글 또는 답변글 쓰기 (파일첨부 x)-->
	<insert id="add" parameterType="com.spring.employees.model.BoardVO">
		<if test='fk_seq.equals("") '>
			insert into tbl_board(seq, fk_empno, name, subject, content, pw, readCount, regDate, status, groupno, fk_seq, depthno)
			values(boardSeq.nextval, #{fk_empno}, #{name}, #{subject}, #{content}, #{pw}, default, default, default, #{groupno}, default, default)
		</if>
		
		<if test='!fk_seq.equals("") '>
			insert into tbl_board(seq, fk_empno, name, subject, content, pw, readCount, regDate, status, groupno, fk_seq, depthno)
			values(boardSeq.nextval, #{fk_empno}, #{name}, #{subject}, #{content}, #{pw}, default, default, default, #{groupno}, #{fk_seq}, #{depthno}+1)
		</if>
	</insert>
	
	
	<!-- 파일첨부가 있는 글쓰기 -->
	<!-- 원글 또는 답변글 쓰기 (파일첨부 O) -->
	<insert id="add_withFile" parameterType="com.spring.employees.model.BoardVO">
		<if test='fk_seq.equals("")'>
			insert into tbl_board(seq, fk_empno, name, subject, content, pw, readCount, regDate, status, groupno, fk_seq, depthno, fileName, orgFilename, fileSize)
			values(boardSeq.nextval, #{fk_empno}, #{name}, #{subject}, #{content}, #{pw}, default, default, default, #{groupno}, default, default, #{fileName}, #{orgFilename}, #{fileSize} )
		</if>
		
		<if test='!fk_seq.equals("")'>
			insert into tbl_board(seq, fk_empno, name, subject, content, pw, readCount, regDate, status, groupno, fk_seq, depthno, fileName, orgFilename, fileSize)
			values(boardSeq.nextval, #{fk_empno}, #{name}, #{subject}, #{content}, #{pw}, default, default, default, #{groupno}, #{fk_seq}, #{depthno}+1, #{fileName}, #{orgFilename}, #{fileSize})
		</if>	
	</insert>	
	
	
	<!-- 페이징 처리 x 검색어 x 전체 글목록 보여주기(수정 예정) -->
	<!--   <select id="boardListNoSearch" resultType="com.spring.employees.model.BoardVO">
		select seq, fk_empno, name, subject
		     , readCount, to_char(regDate, 'yy-mm-dd hh24:mi') as regDate
		from tbl_board
		where status = 1
		order by seq desc
	</select>
	-->
	
	<!-- 총 게시물 건수(totalCount)구하기 - 검색이 있을 때와 없을 때로 나뉜다. -->
	<select id="getTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_board
		where status = 1
		<if test='searchWord != ""'>
			and lower(${searchType}) like '%'||lower(#{searchWord})||'%'
		</if>
	</select>
	
	<!-- 페이징 처리한 글목록 가져오기(검색이 있든지 없든지 모두 포함된 것) -->
	<select id="boardListSearchWithPaging" parameterType="HashMap" resultType="com.spring.employees.model.BoardVO">
      select seq, fk_empno, name, subject, readCount, regDate, commentCount  
           , groupno, fk_seq, depthno
           , fileName
      from 
      (
          select rownum AS rno
               , seq, fk_empno, name, subject, readCount, regDate, commentCount  
               , groupno, fk_seq, depthno 
               , fileName
          from 
          (
              select seq, fk_empno, name, subject, readCount, 
                     to_char(regDate, 'yy-mm-dd hh24:mi') AS regDate,
                     commentCount, 
                     groupno, fk_seq, depthno 
                    ,fileName
              from tbl_board
              where status = 1 
               <if test=' searchType != "" and searchWord != "" '>
               and lower( ${searchType} ) like '%' || lower( #{searchWord} ) || '%'
               </if>
              start with fk_seq = 0 
              connect by prior seq = fk_seq
              order siblings by groupno desc, seq asc  
          ) V 
      ) T 
      where rno between #{startRno} and #{endRno}
	</select>
	
	
	<!-- 글 한개 조회하기 -->
	<select id="getView" parameterType="HashMap" resultType="com.spring.employees.model.BoardVO">
		select  previousseq, previoussubject, 
		       seq, fk_empno, name, subject, content, readCount, regDate,
		       nextseq, nextsubject, 
		       groupno , fk_seq, depthno
		     , fileName, orgFilename, fileSize
		from
		(
		    select lag(seq, 1) over(order by seq desc) AS previousseq
		         , lag(subject, 1) over(order by seq desc) AS previoussubject
		        
		         , seq, fk_empno, name, subject, content, readCount
		         , to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate
		         
		         , lead(seq, 1) over(order by seq desc) AS nextseq
		         , lead(subject, 1) over(order by seq desc) AS nextsubject
		    	 , groupno , fk_seq, depthno
		    	 , fileName, orgFilename, fileSize
		    from tbl_board
		    where status = 1
		    <if test='searchType != "" and searchWord != ""'>
		    	and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
			</if>
		) V
		where V.seq = #{seq}
	</select>
	
	
	<!-- 조회수 1 증가하기 -->
	<update id="setAddReadCount" parameterType="String">
		update tbl_board set readCount = readCount + 1
		where seq = #{seq}
	</update>
	
	
	<!-- 글 수정하기  -->
	<update id="boardEdit" parameterType="com.spring.employees.model.BoardVO">
		update tbl_board set subject = #{subject}
						   , content = #{content}
		where seq = #{seq} and pw = #{pw}
	</update>
	
	
	<!-- 글 삭제하기 -->
	<delete id="boardDel" parameterType="HashMap">
		delete from tbl_board
		where seq = #{seq} and pw = #{pw}
	</delete>
	
	
	<!-- 댓글 쓰기(tbl_comment 테이블에 insert) -->
	<insert id="addComment" parameterType="com.spring.employees.model.CommentVO_sj"  >
		insert into tbl_comment(seq, fk_empno, name, content, regDate, parentSeq, status)
		values(commentSeq.nextval, #{fk_empno}, #{name}, #{content}, default, #{parentSeq}, default)
	</insert>
	
	
	<!-- tbl_board 테이블에 commentCount 컬럼의 값을 1증가(update) -->
	<update id="updateCommentCount" parameterType="String">
		update tbl_board set commentCount = commentCount + 1
		where seq = #{parentSeq}
	</update>
	
	
	<!-- 검색어 입력시 자동글 완성하기 -->
	<select id="wordSearchShow" parameterType="HashMap" resultType="String">
		<choose>
			<when test="searchType eq 'name'" >
				select distinct ${searchType}
			</when>
			<otherwise>
				select ${searchType}
			</otherwise>
		</choose>	
		from tbl_board
		where status = 1
		and lower( ${searchType} ) like '%' || lower( #{searchWord} ) || '%'
		<!-- select 문에서 distinct 와 order by 절을 함께 사용할때는 조심해야 한다.
             order by 절에는 select 문에서 사용된 컬럼만 들어올 수가 있다.
                        또는 order by 절을 사용하지 않아야 한다.
        -->
		<if test="searchType neq 'name'">
		order by seq desc
		</if>	
	</select>
	
	
	
	<!-- 원게시물에 딸린 댓글들을 조회해오는 것 -->
	<select id="getCommentList" parameterType="String" resultType="com.spring.employees.model.CommentVO_sj">
		select name, content, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate
 		from tbl_comment
 		where status = 1 and parentSeq = #{parentSeq} 
 		order by seq desc
	</select>
	
	
	
	<!-- 회원 한 명의 정보 조회하기 --> 
	<select id="getViewEmpOne" parameterType="HashMap" resultType="com.spring.employees.model.EmpVO_sj">
		select empname, empid,email, empno, to_char(hiredate, 'yyyy-mm-dd') AS hiredate, ranking, fk_deptnum, empstatus, noticeemail
		from tbl_employee
		where empno = #{empno}
	</select>
	
	
	
	<!-- 회원 한 명의 정보 수정하기 -->
	<update id="empUpdate" parameterType="com.spring.employees.model.EmpVO_sj">		
		update tbl_employee set ranking = #{ranking}
                              , fk_deptnum = #{fk_deptnum}
                              , empstatus = #{empstatus}
		where empno = #{empno}
	</update>
	
	
</mapper>