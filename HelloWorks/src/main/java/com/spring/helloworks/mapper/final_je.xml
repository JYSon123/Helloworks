<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.!!) ==== -->
<mapper namespace="hje">
	
	<!-- DB연결 테스트용 (이순신, 엄정화 select) -->
	<select id="getName" resultType="String" >
		select name
		from tbl_test
	</select>
	
	
	<!-- 캘린더 추가하기 -->
	<insert id="addCalendar" parameterType="HashMap">
		insert into tbl_calendar (calno, fk_cno, calname, color, shareEmp)
		values(calnoSeq.nextval, #{fk_cno}, #{calname}, #{color}, #{shareEmp})
	</insert>
	
	
	<!-- 개인 캘린더 리스트 받아오기 -->
	<select id="showCalendarList" resultType="com.spring.schedule.model.CalendarVO_HJE" parameterType="String">
		select calno, calname, color, fk_cno, shareemp
		from tbl_calendar
		where shareemp like '%'|| #{empid} ||'%'
	</select>
	
	
	<resultMap type="HashMap" id="schduleMap">
       <result property="title"    		column="title"       javaType="String" />
       <result property="startdate"    	column="startdate"   javaType="String" />
       <result property="enddate"       column="enddate"     javaType="String" />
       <result property="color"      	column="color"       javaType="String" />
    </resultMap>
	<!-- 일정 출력하기 -->
	<select id="showSchedule"  resultMap="schduleMap"  parameterType="String">
		select title, startdate, enddate, color
		from tbl_calendar C JOIN tbl_schedule S
		ON C.CALNO = S.FK_CALNO
		where SHAREEMP like '%'|| #{empid} ||'%'
	</select>
	
	<!-- 일정 추가하기 -->
	<insert id="addSchedule" parameterType="HashMap">
		
		insert into tbl_schedule (sno, fk_calno, title, startdate, enddate, status
			<if test="content != ''">
				, content
			</if>
			<if test="location != ''">
				, location
			</if>
			<if test="notice != ''">
				, notice
			</if>
		)
		values (snoSeq.nextval, #{fk_calno}, #{title}, #{startDate}, #{endDate}, 0
			<if test="content != ''">
				, #{content}
			</if>
			<if test="location != ''">
				, #{location}
			</if>
			<if test="notice != ''">
				, #{notice}
			</if>
		)
	</insert>
	
	<!-- 개인 캘린더 수정하기 -->
	<update id="updatePersonal" parameterType="HashMap">
		update tbl_calendar set calname= #{calname} , color= #{color}
		where calno= #{calno} and fk_cno = 1 
	</update>
	
	<!-- 개인 캘린더 삭제하기 -->	
	<delete id="deletePersonal" parameterType="HashMap">
		delete from tbl_calendar
		where calno= #{calno} and fk_cno = 1
	</delete>
	
	<!-- 공유 캘린더 수정하기 -->
	<update id="updateShare" parameterType="HashMap">
		update tbl_calendar set calname= #{calname} , color= #{color}, shareEmp=#{shareEmp}
		where calno= #{calno} and fk_cno = 2 
	</update>
	
	<!-- 공유 캘린더 삭제하기 -->	
	<delete id="deleteShare" parameterType="HashMap">
		delete from tbl_calendar
		where calno= #{calno} and fk_cno = 2
	</delete>
	
	
	<resultMap type="HashMap" id="searchSchduleMap">
       <result property="title"    		column="title"       javaType="String" />
       <result property="startDate"    	column="startDate"   javaType="String" />
       <result property="endDate"       column="endDate"     javaType="String" />
       <result property="calName"       column="calName"     javaType="String" />
       <result property="shareEmp"      column="shareEmp"    javaType="String" />
       <result property="color"      	column="color"       javaType="String" />
       <result property="sno"      		column="sno"       	 javaType="String" />
       <result property="content"      	column="content"     javaType="String" />
       <result property="location"      column="location"    javaType="String" />
       <result property="status"      	column="status"      javaType="String" />
    </resultMap>
	<!-- 일정검사 -->
	<select id="searchSchedule"  resultMap="searchSchduleMap"  parameterType="HashMap">
		select title, startDate, endDate, calName, shareEmp, color, sno, content, location, status
		from tbl_calendar C JOIN tbl_schedule S
		ON C.CALNO = S.FK_CALNO
		where SHAREEMP like '%'|| #{empid} ||'%'
		
		<if test="searchType == 'term'">
			and (to_date(substr(startDate,0,10),'yyyy-mm-dd') between #{startDate} and #{endDate}
			or to_date(substr(endDate,0,10),'yyyy-mm-dd') between #{startDate} and #{endDate})
		</if>
		
		<if test="searchType != 'term'">
			and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		</if>
		order by enddate desc
	</select>
	
	<!-- 페이징처리한 일정 -->
	<select id="searchPagingSchedule"  resultMap="searchSchduleMap"  parameterType="HashMap">
		select title, startDate, endDate, calName, shareEmp, color, sno, content, location, status
		from 
		(
			select row_number() over (order by sno desc) AS rno,
	               title, startDate, endDate, calName, shareEmp, color, sno, content, location, status
			from tbl_calendar C JOIN tbl_schedule S
			ON C.CALNO = S.FK_CALNO
			where SHAREEMP like '%'|| #{empid} ||'%'
			
			<if test="searchType == 'term'">
				and (to_date(substr(startDate,0,10),'yyyy-mm-dd') between #{startDate} and #{endDate}
				or to_date(substr(endDate,0,10),'yyyy-mm-dd') between #{startDate} and #{endDate})
			</if>
			
			<if test="searchType != 'term'">
				and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
			</if>
			order by enddate desc
		)
		where rno between #{startRno} and #{endRno}
	</select>
	
	<!-- 검색결과에 대한 총 일정 건수 -->
	<select id="getTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_calendar C JOIN tbl_schedule S
		ON C.CALNO = S.FK_CALNO
		where SHAREEMP like '%'|| #{empid} ||'%'
		<if test="searchWord != '' ">
			and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		</if> 
		<if test="searchType == 'term'">
			and (to_date(substr(startDate,0,10),'yyyy-mm-dd') between #{startDate} and #{endDate}
			or to_date(substr(endDate,0,10),'yyyy-mm-dd') between #{startDate} and #{endDate})
		</if>
	</select>
	
	<!-- 자동완성 -->	
	<select id="autoSearchWord"  parameterType="HashMap" resultType="String">
		select title
		from tbl_calendar C JOIN tbl_schedule S
		ON C.CALNO = S.FK_CALNO
		where SHAREEMP like '%'|| #{empid} ||'%' and ${searchType} like '%'|| #{searchWord} ||'%'
		order by endDate desc
	</select>
	
	<!-- 일정 수정하기 -->
	<update id="updateSchedule" parameterType="HashMap">
		update tbl_schedule set title=#{title}, location=#{location}, content=#{content}, status=#{status}, startDate=#{startDate}, endDate=#{endDate}, notice= #{notice}
		where sno = #{sno}
	</update>
	
	<!-- 일정 삭제하기 -->
	<delete id="deleteSchedule" parameterType="HashMap">
		delete from tbl_schedule 
		where sno = #{sno}
	</delete>
	
	<!-- 대상인원에 해당하는 직원 찾기 -->
	<resultMap type="HashMap" id="shareEmpMap">
       <result property="empname"   column="empname"       javaType="String" />
       <result property="empid"		column="empid"   javaType="String" />
       <result property="deptname"  column="deptname"     javaType="String" />
    </resultMap>
	<select id="searchShareEmp" resultMap="shareEmpMap" parameterType="String">
		select empname, empid, deptname
		from tbl_employee E JOIN tbl_department D
		on E.fk_deptnum = D.deptnum
		where empname like '%'|| #{employee}||'%'
	</select>
	
	<!-- 스프링스케줄러로 알림메일 보내기 -->
	<resultMap type="HashMap" id="emailSchMap">
       <result property="title"   	column="title"      javaType="String" />
       <result property="content"	column="content"   	javaType="String" />
       <result property="location"  column="location"   javaType="String" />
       <result property="startdate" column="startdate"  javaType="String" />
       <result property="enddate"  	column="enddate"    javaType="String" />
       <result property="shareemp"  column="shareemp"   javaType="String" />
    </resultMap>
	<select id="getEmailSchList" resultMap="emailSchMap">
		select title, content, location, startdate, enddate, shareemp
		from tbl_schedule S JOIN tbl_calendar C
		ON S.FK_CALNO = c.CALNO
		where notice like '%' || 'email' and substr(startdate,1,10) = to_char(sysdate+1, 'yyyy-mm-dd')
	</select>
	
	<!-- 공유대상에 포함된 직원의 이메일 알아오기 -->
	<select id="getShareEmpEmail" parameterType="HashMap" resultType="com.spring.helloworks.model.EmpVO_KJH" >
		select email
		from tbl_employee
		where empid in 
		<foreach collection="shareempArr" index="i" open="(" separator="," close=")">
			'${shareempArr[i]}'
		</foreach>
	</select>
	
	<!-- 캘린더명 중복체크하기 -->
	<select id="calnameDuplicateCheck" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_calendar
		where calname= #{calname} and shareemp like '%'|| #{empid} || '%'
	</select>
	
	
	
</mapper>